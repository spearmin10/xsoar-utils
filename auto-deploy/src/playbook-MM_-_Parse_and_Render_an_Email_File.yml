contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    isoverridable: false
    itemVersion: 2.0.4
    packID: ""
    packName: ""
    prevname: ""
    toServerVersion: ""
description: Add email details to the relevant context entities and handle the case
  where original emails are attached.
dirtyInputs: true
id: MM - Parse and Render an Email File
inputs:
- description: An EML or MSG file with
  key: File
  playbookInputQuery: null
  required: false
  value:
    complex:
      root: File
- description: "The parameters about where to set email headers. \nThey must have
    comma separated 3 values in the folowing order.\n - The name of Incident field
    of Grid type\n - The column name for header names\n - The column name for header
    values\nIf you don't want to set them to a Grid field, you can put single comma
    (,)."
  key: EmailHeadersGrid
  playbookInputQuery: null
  required: false
  value:
    simple: emailheaders,headername,headervalue
- description: true if attachment files extracted from the file are added to `attachments`
    in the incident, otherwise false.
  key: UploadAttachments
  playbookInputQuery: null
  required: false
  value:
    simple: "true"
- description: Determines whether the authenticity of the email should be verified
    using SPF, DKIM, and DMARC.
  key: AuthenticateEmail
  playbookInputQuery: null
  required: false
  value:
    simple: "true"
name: MM - Parse and Render an Email File
outputs:
- contextPath: Email
  description: Email object.
  type: unknown
- contextPath: Email.To
  description: This shows to whom the message was addressed, but may not contain the
    recipient's address.
  type: string
- contextPath: Email.CC
  description: Email 'cc' addresses
  type: string
- contextPath: Email.From
  description: This displays who the message is from, however, this can be easily
    forged and can be the least reliable.
  type: string
- contextPath: Email.Subject
  description: Email subject
  type: string
- contextPath: Email.HTML
  description: Email 'html' body if exists
  type: string
- contextPath: Email.Text
  description: Email 'text' body if exists
  type: string
- contextPath: Email.Depth
  description: The depth of the email. Depth=0 for the first level email. If email1
    contains email2 contains email3. Then email1 depth is 0, email2 depth is 1, email3
    depth is 2
  type: number
- contextPath: Email.AttachmentNames
  description: The list of attachment names in the email
  type: string
- contextPath: Email.Format
  description: The format of the email if available
  type: string
- contextPath: Email.HeadersMap
  description: The full email headers json
  type: Unknown
- contextPath: Email.HeadersMap.From
  description: This displays who the message is from, however, this can be easily
    forged and can be the least reliable.
  type: Unknown
- contextPath: Email.HeadersMap.To
  description: This shows to whom the message was addressed, but may not contain the
    recipient's address.
  type: Unknown
- contextPath: Email.HeadersMap.Subject
  description: Email subject
  type: String
- contextPath: Email.HeadersMap.Date
  description: The date and time the email message was composed
  type: Unknown
- contextPath: Email.HeadersMap.CC
  description: Email 'cc' addresses
  type: Unknown
- contextPath: Email.HeadersMap.Reply-To
  description: The email address for return mail
  type: String
- contextPath: Email.HeadersMap.Received
  description: List of all the servers/computers through which the message traveled
  type: String
- contextPath: Email.HeadersMap.Message-ID
  description: A unique string assigned by the mail system when the message is first
    created. These can easily be forged. (e.g. 5c530c1b.1c69fb81.bd826.0eff@mx.google.com)
  type: String
- contextPath: Email.AttachmentFile
  description: The attachment file
  type: unknown
- contextPath: Email.AttachmentFile.EntryID
  description: The EntryID of the attachment file
  type: string
- contextPath: Email.AttachmentFile.Extension
  description: The extension of the attachment file
  type: string
- contextPath: Email.AttachmentFile.Name
  description: The name of the attachment file
  type: string
- contextPath: Email.AttachmentFile.Info
  description: The info of the attachment file
  type: string
- contextPath: Email.AttachmentFile.Size
  description: The size of the attachment file
  type: number
- contextPath: File
  type: unknown
- contextPath: File.EntryID
  description: The EntryID of the attachment file
  type: string
- contextPath: File.Extension
  description: The extension of the attachment file
  type: string
- contextPath: File.Name
  description: The name of the attachment file
  type: string
- contextPath: File.Info
  description: The info of the attachment file
  type: string
- contextPath: File.Size
  description: The size of the attachment file
  type: number
starttaskid: "0"
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "23"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 7100d00a-6322-4e4c-88f9-96337bae2eec
      iscommand: false
      name: ""
      version: -1
    taskid: 7100d00a-6322-4e4c-88f9-96337bae2eec
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 275,
          "y": 50
        }
      }
  "1":
    continueonerrortype: ""
    id: "1"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      "no":
      - "3"
      "yes":
      - "2"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      entryid:
        complex:
          accessor: EntryID
          root: inputs.File
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Identify whether the incident includes an email message attached
        as an eml or msg file and return the answer to playbook. Also saves the identified
        entry ID to context for use for later. Commonly used in automated playbooks
        that handle phishing reports sent to a special phishing mailbox set up by
        the security team.
      id: 972cb3e9-87b2-4326-87a3-bf4c5744c51f
      iscommand: false
      name: Does the file include email?
      script: IdentifyAttachedEmail
      type: condition
      version: -1
    taskid: 972cb3e9-87b2-4326-87a3-bf4c5744c51f
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 370
        }
      }
  "2":
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "3"
    note: false
    quietmode: 0
    scriptarguments:
      AuthenticateEmail:
        complex:
          root: inputs.AuthenticateEmail
      Email:
        complex:
          accessor: =""}
          root: ${
      Email/cc:
        complex:
          accessor: =""}
          root: ${
      Email/format:
        complex:
          accessor: =""}
          root: ${
      Email/from:
        complex:
          accessor: =""}
          root: ${
      Email/headers:
        complex:
          accessor: =""}
          root: ${
      Email/html:
        complex:
          accessor: =""}
          root: ${
      Email/subject:
        complex:
          accessor: =""}
          root: ${
      Email/text:
        complex:
          accessor: =""}
          root: ${
      EmailHeadersGrid:
        complex:
          root: inputs.EmailHeadersGrid
      File:
        complex:
          root: inputs.File
      Forwarded:
        simple: "false"
      IncidentFieldCategories:
        simple: email*,attachment*
      UploadAttachments:
        complex:
          root: inputs.UploadAttachments
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: Add email details to the relevant context entities and handle the
        case where original emails are attached.
      id: 5c14883f-dc7b-4fc7-8dfa-b98116055ea5
      iscommand: false
      name: Parse and Render an email
      playbookId: MM - Parse and Render an Email
      type: playbook
      version: -1
    taskid: 5c14883f-dc7b-4fc7-8dfa-b98116055ea5
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
  "3":
    continueonerrortype: ""
    id: "3"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: bdbbda87-7cb1-44da-823f-69614a621a73
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: bdbbda87-7cb1-44da-823f-69614a621a73
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 275,
          "y": 720
        }
      }
  "23":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: EntryID
                root: inputs.File
          operator: isNotEmpty
          right:
            value: {}
      label: "yes"
    continueonerrortype: ""
    id: "23"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "3"
      "yes":
      - "1"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the incident contains any kind of file.
      id: adcd4c79-9542-4b5e-8cd4-094cabfb1826
      iscommand: false
      name: Is the email in file?
      type: condition
      version: -1
    taskid: adcd4c79-9542-4b5e-8cd4-094cabfb1826
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 275,
          "y": 195
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 735,
        "width": 605,
        "x": 50,
        "y": 50
      }
    }
  }
