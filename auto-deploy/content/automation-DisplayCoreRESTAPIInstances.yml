comment: This field display script returns a list of currently active Core REST instances.
commonfields:
  id: DisplayCoreRESTAPIInstances
  version: -1
dockerimage: demisto/python3:3.12.11.4417419
enabled: true
engineinfo: {}
mainengineinfo: {}
name: DisplayCoreRESTAPIInstances
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  import traceback
  from typing import Any


  def get_instances(
  ) -> list[dict[str, Any]]:

      ver_info = demisto.demistoVersion()
      platform = ver_info.get("platform")
      if (
          (platform in ("xsoar", "xsoar_hosted") and is_demisto_version_ge("8.0.0")) or
          platform in ("x2", "unified_platform")
      ):
          res = demisto.internalHttpRequest(
              uri="/public/v1/settings/integration/search",
              method="POST", body={}
          )
      else:
          res = demisto.internalHttpRequest(
              uri="settings/integration/search",
              method="POST", body={}
          )

      body = res.get("body") or ""
      if res.get("statusCode") != 200:
          status = res.get("status")
          raise DemistoException(f"Failed to seach integrations - {status} {body}")
      else:
          return json.loads(body).get("instances") or []


  def main():
      get_instances()
      try:
          instance_names = [
              instance.get("name")
              for instance in get_instances()
              if instance.get("brand") == "Core REST API" and argToBoolean(instance.get("enabled"))
          ]
          return_results({
              'hidden': False,
              'options': [name for name in instance_names if name]
          })
      except Exception as err:
          return_error(str(err), error=traceback.format_exc())


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()
scripttarget: 0
subtype: python3
tags:
- demo-setup
- field-display
type: python
